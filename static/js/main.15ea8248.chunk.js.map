{"version":3,"sources":["serviceWorkerRegistration.ts","reportWebVitals.ts","materialTheme.js","logo.svg","components/Header.tsx","components/Footer.tsx","components/About.tsx","components/calculateRas.ts","components/utils.ts","components/AreaChart.tsx","components/Area3DChart.tsx","components/Result.tsx","components/unitConverter.ts","components/Calculator.tsx","components/calculateBmi.ts","components/Help.tsx","components/ScrollToTop.tsx","App.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","customFontForTitleAndBodyText","theme","createMuiTheme","typography","h1","fontFamily","h2","h3","h4","h5","subtitle1","body1","body2","palette","text","primary","secondary","main","red","A400","background","default","responsiveFontSizes","Header","Grid","container","direction","justify","alignItems","spacing","item","xs","sm","CSSTransition","unmountOnExit","in","timeout","appear","enter","exit","classNames","alt","src","logo","Typography","align","variant","gutterBottom","Footer","Box","component","m","color","About","Container","maxWidth","display","justifyContent","p","Button","size","Link","to","startIcon","calculateRas","age","periods","ovary","smoke","mu_periods","Math","exp","pow","a20","a21","mu_age","range","start","end","step","len","floor","Array","fill","undefined","map","_","idx","defaultDatasetProp","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHitRadius","AreaChart","props","minAge","parseInt","maxAge","years","labels","toString","dataSet","isSmoking","dataSetInvertSmoke","legend","position","options","tooltips","titleFontSize","callbacks","title","tooltipItem","data","label","parseFloat","value","toFixed","enabled","datasets","pointRadius","context","dataIndex","ageRange","periodRange","z","x","y","forEach","period","line","push","reverse","layout","showlegend","scene","xaxis","yaxis","zaxis","aspectratio","camera","eye","paper_bgcolor","margin","l","r","b","t","width","height","autosize","surfacecolor","handleInitialised","figure","rootDiv","displayModeBar","responsive","modeBarButtonsToRemove","Area3dChart","onClick","onInitialized","colorscale","showscale","opacity","type","zsmooth","Result","params","useParams","ras","rasPercent","bmi","bmiText","className","id","animDelay","animate","textColor","nrOfLevels","arcsLength","colors","formatTextValue","percent","cornerRadius","arcPadding","print","convert","fromType","isImperial","toType","round","convertUnits","from","Calculator","useState","setImperial","setAge","setHeight","weight","setWeight","setPeriods","setOvary","setSmoke","history","useHistory","minHeight","maxHeight","minWeight","maxWeight","FormControlLabel","control","Switch","checked","onChange","event","pb","pt","px","py","Slider","valueLabelDisplay","min","max","setHeightI","setWeightI","FormControl","FormLabel","RadioGroup","name","Radio","calculateBmi","handleCalculate","IconButton","rel","target","href","withRouter","useEffect","unlisten","listen","setTimeout","scroll","top","left","behavior","routes","path","Component","Help","App","marginTop","exact","my","ReactDOM","render","StrictMode","ThemeProvider","materialTheme","CssBaseline","document","getElementById","process","publicUrl","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.15ea8248.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) { \n  \n\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    console.log( `${process.env.PUBLIC_URL}/service-worker.js`);\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      console.error('Error', publicUrl.origin, window.location.origin);\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n  \n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n \n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\n\nconst customFontForTitleAndBodyText = 'Comfortaa'\nconst theme = createMuiTheme({\n  typography: {\n    h1: {\n      fontFamily: customFontForTitleAndBodyText,\n    },\n    h2: {\n      fontFamily: customFontForTitleAndBodyText,\n    },\n    h3: {\n      fontFamily: customFontForTitleAndBodyText,\n    },\n    h4: {\n      fontFamily: customFontForTitleAndBodyText,\n    },\n    h5: {\n      fontFamily: customFontForTitleAndBodyText,\n    },\n    subtitle1: {\n      fontFamily: customFontForTitleAndBodyText,\n    },\n    body1: {\n      fontFamily: customFontForTitleAndBodyText,\n    },\n    body2: {\n      fontFamily: customFontForTitleAndBodyText,\n    },\n  },\n  palette: {\n    text: {\n      primary: \"#542d4e\",\n      secondary: \"#874a7e\"\n    },\n    primary: {\n      text: '#ff00ff',\n      main: '#ce5eba',\n    },\n    secondary: {\n      main: '#ce5eba',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#ffe8fb',\n    },\n  },\n});\n\nexport default responsiveFontSizes(theme);\n","export default __webpack_public_path__ + \"static/media/logo.4aea2383.svg\";","import Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport logo from '../logo.svg';\nimport { CSSTransition } from 'react-transition-group';\nimport './Header.css';\n\nexport default function Header() {\n\n    return (\n        <>\n            <Grid container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                spacing={1}>\n                <Grid item xs={3} sm={2}>\n                    <CSSTransition\n                        unmountOnExit\n                        in={true}\n                        timeout={{ appear: 300, enter: 300, exit: 300 }}\n                        classNames='roll'\n                        appear\n                    >\n                        <img alt=\"logo\" src={logo} />\n                    </CSSTransition>\n                </Grid>\n                <Grid item xs={12} sm={7}>\n                    <CSSTransition\n                        unmountOnExit\n                        in={true}\n                        timeout={{ appear: 300, enter: 300, exit: 300 }}\n                        classNames='fade'\n                        appear\n                    >\n                        <Typography\n                            align=\"center\"\n                            variant=\"h4\"\n                            gutterBottom>\n                            Reproductive Ageing Score\n             </Typography>\n                    </CSSTransition>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nexport default function Footer() {\n    return (\n        <Box\n            component=\"div\"\n            m={1}>\n            <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                align=\"center\">\n                Copyright &copy;   Dr. Kai Triebner, Alexandru Constantin 2020\n        </Typography>\n        </Box>\n    );\n}","import Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport AddToHomeScreenIcon from '@material-ui/icons/AddToHomeScreen';\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom';\nimport Footer from './Footer';\n\n\nfunction About() {\n    return (\n        <>\n            <Container maxWidth=\"sm\">\n\n                <Typography\n                    variant=\"h5\"\n                    align=\"center\"\n                    gutterBottom>\n                    Calculate your menopausal status\n             </Typography>\n                <Typography\n                    align=\"center\"\n                    variant=\"body1\"\n                    gutterBottom>\n                    This calculator is based on data from a Northern European caucasian\n                    population and gives merely an educated guess based on fuzzy set theory.\n             </Typography>\n            </Container>\n            <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                m={4}\n                p={4} >\n                <Button color=\"primary\"\n                    variant=\"contained\"\n                    size=\"large\"\n                    component={Link}\n                    to=\"/calculator\">\n                    Let's Begin\n            </Button>\n            </Box>\n\n\n            <Box display=\"flex\" justifyContent=\"center\" m={1} p={1} >\n                <Button\n                    startIcon={<AddToHomeScreenIcon />}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    component={Link}\n                    to=\"/help\">\n                    Install\n            </Button>\n            </Box>\n            <Footer />\n        </>\n    );\n}\n\nexport default About;\n","export default function calculateRas(\n    age: number,\n    periods: number,\n    ovary: number,\n    smoke: number) {\n\n    const mu_periods = 1 - Math.exp(-0.00047014 * Math.pow((periods - 0.7), 4) + 0.00894 *\n        Math.pow((periods - 0.7), 3) - 0.03072 * Math.pow((periods - 0.7), 2) + 0.0861 *\n        (periods - 0.7) - 2.31719);\n\n    const a20 = ovary === 1 ? 1 : 0;\n    const a21 = smoke === 1 ? 2 : 0;\n\n    let mu_age = 0.00470857774049832 *\n       Math.pow(age + a20 + a21, 2) - 0.0866242927285241 *\n        (age + a20 + a21) - 7.64677252050801\n    mu_age = Math.exp(mu_age) / (1 + Math.exp(mu_age));\n\n    \n    return ovary === 2 ? 1 : mu_periods + mu_age - (mu_periods * mu_age)\n}\n\nexport const minPeriods = 0;\nexport const maxPeriods = 15;\nexport const minAge = 35;\nexport const maxAge = 66;\n\n","export const range = (start: number, end: number, step: number = 1): number[] => {\n    const len = Math.floor((end - start) / step) + 1;\n    return Array(len).fill(undefined).map((_, idx) => start + (idx * step));\n}\n","import { Line } from 'react-chartjs-2';\nimport calculateRas from './calculateRas';\nimport { range } from './utils';\n\nconst defaultDatasetProp = {\n    fill: true,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(15,192,192,0.4)',\n    borderColor: 'rgba(75,192,192,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 5,\n    pointHoverRadius: 10,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointHitRadius: 10,\n}\n\n\nexport default function AreaChart(props: any) {\n    const minAge = parseInt(props.minAge);\n    const maxAge = parseInt(props.maxAge);\n\n    const age = parseInt(props.age);\n    const periods = parseInt(props.periods);\n    const ovary = parseInt(props.ovary);\n    const smoke = parseInt(props.smoke);\n\n    const years = range(minAge, maxAge);\n\n    const labels = years.map(age =>\n        age.toString());\n\n    const dataSet = years.map(age =>\n        calculateRas(age, periods, ovary, smoke) * 100);\n\n    const isSmoking = smoke === 1;\n    const dataSetInvertSmoke = years.map(age =>\n        calculateRas(age, periods, ovary, isSmoking ? 0 : 1) * 100);\n\n\n    return <Line\n        legend={{\n            display: true,\n            position: 'top'\n        }}\n        options={{\n            tooltips: {\n                titleFontSize: 15,\n                callbacks: {\n                    title: (tooltipItem: any, data: any) => {\n                        return `Age ${tooltipItem[0].label}`;\n                    },\n                    label: (tooltipItem: any, data: any) => {\n                        return `RAS: ${parseFloat(tooltipItem.value).toFixed(1)}`;\n                    }\n                },\n                enabled: true,\n            },\n        }}\n        data={{\n\n            labels,\n            datasets: [\n                {\n                    pointRadius: (context: any) => {\n                        if (parseInt(labels[context.dataIndex]) === age) {\n                            return 10;\n                        } else {\n                            return 2;\n                        }\n                    },\n                    label: 'You',\n                    data: dataSet,\n                    ...defaultDatasetProp\n                },\n                {\n                    borderColor: '#BDB76B',\n                    backgroundColor: '#F0E68C',\n                    label: isSmoking ? 'Without Smoking' : 'Smoking',\n                    data: dataSetInvertSmoke\n                },\n            ]\n\n        }} />;\n}\n","import Plot from 'react-plotly.js';\nimport Plotly from 'plotly.js';\nimport { range } from './utils';\nimport calculateRas, {\n  minAge,\n  maxAge,\n  minPeriods,\n  maxPeriods,\n} from './calculateRas';\n\nimport './Area3DChart.css';\n\n\nconst ageRange = range(minAge, maxAge);\nconst periodRange = range(minPeriods, maxPeriods, 0.48);\n\nconst z: Array<number>[] = [];\nconst x: number[] = ageRange;\nconst y: number[] = periodRange;\nperiodRange.forEach(period => {\n  const line: Array<number> = [];\n  ageRange.forEach(age => {\n    line.push(parseFloat(calculateRas(age, period, 0, 0).toFixed(3)));\n  })\n  z.push(line.reverse());\n});\n\n\nconst layout = {\n  showlegend: false,\n  scene: {\n    xaxis: {\n      title: 'Age',\n    },\n    yaxis: {\n      title: 'M/Year',\n    },\n    zaxis: {\n      title: 'Score',\n    },\n    aspectratio: { x: 1, y: 1, z: 1 },\n    camera: { eye: { x: 2.2, y: 1, z: 1 } }\n  },\n  paper_bgcolor: 'transparent',\n  margin: { l: 1, r: 1, b: 1, t: 1, },\n  width: 500,\n  height: 450,\n  autosize: false,\n  surfacecolor: ['green', 'blue'],\n};\n\n\nconst handleInitialised = (figure: any, rootDiv: HTMLElement) => {\n\n  function rotate(angle: number) {\n    const eye = layout.scene.camera.eye\n    const rtz = xyz2rtz(eye);\n    rtz.t += angle;\n    const newEye = rtz2xyz(rtz);\n    layout.scene.camera.eye = newEye;\n    Plotly.relayout(rootDiv, layout);\n  }\n  function xyz2rtz(xyz: any) {\n    return {\n      r: Math.sqrt(xyz.x * xyz.x + xyz.y * xyz.y),\n      t: Math.atan2(xyz.y, xyz.x),\n      z: xyz.z\n    };\n  }\n  function rtz2xyz(rtz: any) {\n    return {\n      x: rtz.r * Math.cos(rtz.t),\n      y: rtz.r * Math.sin(rtz.t),\n      z: rtz.z\n    };\n  }\n  function run() {\n    rotate(Math.PI / 180);\n  \n  }\n  //setInterval(run, 200);\n}\n\nconst config = {\n  displayModeBar: false,\n  responsive: false,\n  modeBarButtonsToRemove: ['plotyjs'] as any,\n};\n\nexport default function Area3dChart(props: any) {\n  return <>\n    <Plot\n      onClick={() => console.log('click')}\n      onInitialized={handleInitialised}\n      data={\n        [\n          {\n            colorscale: [[0, '#4bd15f'], [.7, '#F5CD19'], [1, '#EA4228']],\n            showscale: false,\n            showlegend: false,\n            opacity: 1,\n            type: 'surface',\n            zsmooth: 'best',\n            z,\n            x, y,\n\n          }\n        ]\n      }\n      config={config}\n      layout={layout}\n    />\n  </>;\n}\n","import Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Autorenew from '@material-ui/icons/Autorenew';\nimport Print from '@material-ui/icons/Print';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom';\nimport GaugeChart from 'react-gauge-chart';\nimport AreaChart from './AreaChart';\nimport Area3DChart from './Area3DChart';\n\nimport './Result.css';\n\nimport {\n    useParams,\n} from 'react-router-dom';\n\nconst minAge = 35;\nconst maxAge = 66;\n\n\nfunction Result() {\n    const params: any = useParams();\n    const ras: number = parseFloat(params.ras);\n    const rasPercent: number = ras * 100;\n    const bmi: number = parseFloat(params.bmi);\n    const age: number = parseFloat(params.age);\n    const periods: number = parseFloat(params.periods);\n    const ovary: number = parseFloat(params.ovary);\n    const smoke: number = parseFloat(params.smoke);\n\n    let bmiText = '';\n    if (bmi < 18.5) bmiText = 'underweight';\n    if (bmi >= 18.5 && bmi <= 24.9) bmiText = 'normal';\n    if (bmi >= 25.0 && bmi <= 24.9) bmiText = 'overweight';\n    if (bmi >= 30) bmiText = 'obese';\n\n    if (!ras || !bmi) {\n        return <></>;\n    }\n\n    return (\n        <>\n\n\n            <Grid container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n\n                spacing={1}>\n                <Grid item xs={12} sm={4} className=\"print-hide\">\n                    <GaugeChart\n                        id='rasPercent-gauge'\n                        animDelay={1000}\n                        animate={true}\n                        textColor='#ce5eba'\n                        nrOfLevels={maxAge - minAge}\n                        arcsLength={[0.3, 0.5, 0.2]}\n                        colors={['#4bd15f', '#F5CD19', '#EA4228']}\n                        formatTextValue={(value) => `${parseFloat(value).toFixed(1)}%`}\n                        percent={ras}\n                        cornerRadius={10}\n                        arcPadding={0.02}\n                    />\n\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <Box m={2} p={2} >\n                        <Typography\n                            align=\"center\"\n                            variant=\"h5\"\n                            gutterBottom>\n                            Your are {rasPercent.toFixed(1)}% menopausal\n                         </Typography>\n                        <Typography\n                            align=\"center\"\n                            variant=\"body1\"\n                            gutterBottom>\n                            Your BMI is {bmi.toFixed(1)} ({bmiText})\n                         </Typography>\n                    </Box>\n                </Grid>\n                <Grid item xs={12} sm={10}>\n                    <AreaChart\n                        rasPercent={rasPercent}\n                        age={age}\n                        ovary={ovary}\n                        periods={periods}\n                        smoke={smoke}\n                        minAge={minAge}\n                        maxAge={maxAge} />\n                </Grid>\n            </Grid>\n\n\n            <Box className=\"print-hide\">\n                <Grid container\n\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\">\n                    <Grid item xs={12} sm={7} >\n                        <Area3DChart />\n                    </Grid>\n                    <Grid item xs={12} >\n                        <Typography\n                            align=\"center\"\n                            variant=\"body2\"\n                            gutterBottom>\n                            Drag the chart to roate it.\n                         </Typography>\n                    </Grid>\n                </Grid>\n            </Box>\n\n\n\n            <Box className=\"print-hide\">\n                <Box display=\"flex\" justifyContent=\"center\" m={1} p={1} >\n                    <Button\n                        onClick={() => window.print()}\n                        startIcon={<Print />}\n                        variant=\"outlined\"\n                        size=\"small\">\n                        Print Results\n            </Button>\n                </Box>\n\n                <Box display=\"flex\"\n                    justifyContent=\"center\"\n                    m={1}\n                    p={1} >\n                    <Button\n                        startIcon={<Autorenew />}\n                        color=\"primary\"\n                        variant=\"contained\"\n                        component={Link}\n                        to=\"/calculator\">\n                        Try Again\n                </Button>\n                </Box>\n            </Box>\n\n        </>\n    );\n\n\n}\n\nexport default Result;\n","import convertUnits from \"convert-units\";\n\nexport default function convert(\n    value: number,\n    fromType: string,\n    isImperial: boolean,\n) {\n    let toType;\n    if (isImperial) {\n        if (fromType === 'kg') {\n            toType = 'lb'\n        }\n        if (fromType === 'cm') {\n            toType = 'in'\n        }\n        if (fromType === 'lb') {\n            toType = 'kg'\n        }\n        if (fromType === 'in') {\n            toType = 'cm'\n        }\n        return Math.round(convertUnits(value).from(fromType as any).to(toType as any));\n    } else {\n        return value;\n    }\n}\n","import Slider from '@material-ui/core/Slider';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Switch from '@material-ui/core/Switch';\n\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { Link, useHistory } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport calculateRas, {\n    minAge,\n    maxAge,\n    minPeriods,\n    maxPeriods,\n} from './calculateRas';\n\nimport calculateBmi from './calculateBmi';\nimport convert from './unitConverter';\n\n\nfunction Calculator() {\n    const [isImperial, setImperial] = useState(false);\n    const [age, setAge] = useState(43);\n    let [height, setHeight] = useState(convert(160, 'cm', isImperial));\n    let [weight, setWeight] = useState(convert(50, 'kg', isImperial));\n    const [periods, setPeriods] = useState(12);\n    const [ovary, setOvary] = useState('0');\n    const [smoke, setSmoke] = useState('0');\n\n    const history = useHistory();\n\n    const minHeight = convert(150, 'cm', isImperial);\n    const maxHeight = convert(185, 'cm', isImperial);\n    const minWeight = convert(45, 'kg', isImperial);\n    const maxWeight = convert(130, 'kg', isImperial);\n    height = convert(height, 'cm', isImperial);\n    weight = convert(weight, 'kg', isImperial);\n    const setHeightI = (value: number) => setHeight(convert(value as number, 'in', isImperial));\n    const setWeightI = (value: number) => setWeight(convert(value as number, 'lb', isImperial));\n\n\n\n    function handleCalculate() {\n        const ras = calculateRas(age, periods, parseInt(ovary), parseInt(smoke));\n        const bmi = calculateBmi(convert(height, 'in', isImperial), convert(weight, 'lb', isImperial));\n        history.push(`/result/${ras}/${bmi}/${age}/${periods}/${ovary}/${smoke}`)\n    }\n    return (\n        <>\n\n            <Box display=\"flex\" justifyContent=\"center\">\n                <FormControlLabel\n                    control={<Switch\n                        checked={isImperial}\n                        onChange={(event, value) => setImperial(value)} />}\n                    label=\"Use imperial units ?\"\n                />\n            </Box>\n\n            <Box pb={4}>\n                <Box pt={4}>\n                    <Typography gutterBottom>How old are you ? (years)</Typography>\n                    <Box px={0} py={4}>\n                        <Slider\n                            value={age}\n                            onChange={(event: any, value: any) => setAge(value)}\n                            valueLabelDisplay=\"on\"\n                            min={minAge}\n                            max={maxAge}\n                        />\n                    </Box>\n                </Box>\n\n                <Box pb={4}>\n                    <Typography gutterBottom>How tall are you? ({isImperial ? 'in' : 'cm'})</Typography>\n                    <Box pt={4}>\n                        <Slider\n                            value={height}\n                            onChange={(event: any, value: any) => setHeightI(value)}\n                            valueLabelDisplay=\"on\"\n                            min={minHeight}\n                            max={maxHeight}\n                        />\n                    </Box>\n                </Box>\n\n                <Box pb={4}>\n                    <Typography gutterBottom>How much do you weigh? ({isImperial ? 'lb' : 'kg'})</Typography>\n                    <Box pt={4}>\n                        <Slider\n                            value={weight}\n                            onChange={(event: any, value: any) => setWeightI(value)}\n                            valueLabelDisplay=\"on\"\n                            min={minWeight}\n                            max={maxWeight}\n                        />\n                    </Box>\n                </Box>\n                <Box pb={4}>\n                    <Typography gutterBottom>\n                        How many periods did you have in the last year?\n          </Typography>\n                    <Box pt={4}>\n                        <Slider\n                            value={periods}\n                            onChange={(event: any, value: any) => setPeriods(value)}\n                            valueLabelDisplay=\"on\"\n                            min={minPeriods}\n                            max={maxPeriods} />\n                    </Box>\n                </Box>\n\n                <Box pb={4}>\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">\n                            Have you ever had an ovary removed?\n            </FormLabel>\n                        <RadioGroup\n                            name=\"ovary\"\n                            value={ovary}\n                            onChange={(event: any, value: any) => {\n                                setOvary(value)\n                            }}\n                        >\n                            <FormControlLabel\n                                value={'0'}\n                                control={<Radio />}\n                                label=\"Never\" />\n                            <FormControlLabel\n                                value={'1'}\n                                control={<Radio />}\n                                label=\"Yes, one ovary\"\n                            />\n                            <FormControlLabel\n                                value={'2'}\n                                control={<Radio />}\n                                label=\"Yes, two ovaries\"\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Box>\n                <Box pb={4}>\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Do you smoke?</FormLabel>\n                        <RadioGroup\n                            name=\"smoke\"\n                            value={smoke}\n                            onChange={(event: any, value: any) => setSmoke(value)}\n                        >\n                            <FormControlLabel value={'0'} control={<Radio />} label=\"No\" />\n                            <FormControlLabel value={'1'} control={<Radio />} label=\"Yes\" />\n                        </RadioGroup>\n                    </FormControl>\n                </Box>\n            </Box>\n\n            <Box display=\"flex\" justifyContent=\"center\" m={1} p={1}>\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => handleCalculate()}\n                >\n                    Calculate\n        </Button>\n            </Box>\n\n            <Box display=\"flex\" justifyContent=\"center\" m={1} p={1}>\n                <IconButton component={Link} to=\"/about\">\n                    <ArrowBackIcon />\n                </IconButton>\n            </Box>\n        </>\n    );\n}\n\nexport default Calculator;\n","export default function calculateBmi(\n    height: number,\n    weight: number,\n) {\n    return weight / (height / 100 * height / 100);\n}\n","import Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom'\n\nfunction Calculator() {\n    return (\n        <>\n            <Grid container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n\n                spacing={1}>\n                <Grid item xs={12} sm={7} >\n             \n             <Typography\n                    align=\"center\"\n                    variant=\"body1\"\n                    gutterBottom>\n                    This is a progressive web application, that means it can be installed on your phone or computer and it works offline.<br/>\n                    Ussualy this is done by going to your browser settings and choose 'Install' or 'Add to Home'.<br/><br/>\n                    Click <a  rel=\"noreferrer\" target=\"_blank\" href=\"https://support.google.com/chrome/answer/9658361?\">here</a> to read more about it.<br/>\n             </Typography>\n\n            </Grid>\n            </Grid>\n\n            <Box display=\"flex\"\n                justifyContent=\"center\"\n                m={1}\n                p={1} >\n                <IconButton\n                    component={Link}\n                    to=\"/about\">\n                    <ArrowBackIcon />\n                </IconButton>\n            </Box>\n\n        </>\n    );\n}\n\nexport default Calculator;\n","import { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction ScrollToTop({ history }: any) {\n    useEffect(() => {\n        const unlisten = history.listen(() => {\n            setTimeout(() => window.scroll({\n                top: 0,\n                left: 0,\n                behavior: 'smooth'\n            }), 100);\n        });\n        return () => {\n            unlisten();\n        }\n    }, []);\n\n    return (null);\n}\n\nexport default withRouter(ScrollToTop);\n","import React from 'react'\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n} from 'react-router-dom'\nimport { CSSTransition } from 'react-transition-group';\n\nimport Header from './components/Header';\n\nimport About from './components/About';\nimport Result from './components/Result';\nimport Calculator from './components/Calculator';\nimport Help from './components/Help';\n\nimport './App.css';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport ScrollToTop from './components/ScrollToTop';\n\nconst routes = [\n  { path: '/about', name: 'About', Component: About },\n  { path: '/calculator', name: 'Calculator', Component: Calculator },\n  { path: '/help', name: 'Help', Component: Help },\n  { path: '/result/:ras/:bmi/:age/:periods/:ovary/:smoke', name: 'Result', Component: Result },\n]\n\nexport default function App() {\n  return (\n    <Container className=\"container\" maxWidth=\"md\">\n      <Box marginTop={4}>\n        <Header />\n      </Box>\n      <Router>\n        <ScrollToTop />\n        <Route exact path=\"/\">\n          <Redirect to=\"/about\" />\n        </Route>\n\n        {routes.map(({ path, Component }) => (\n          <Route key={path} exact path={path}>\n            {({ match }) => (\n              <CSSTransition\n                in={match != null}\n                timeout={300}\n                classNames=\"page\"\n                appear\n                unmountOnExit\n              >\n\n                <Box className=\"page\" my={4}>\n\n                  <Box m={1}>\n                    <Component />\n                  </Box>\n\n                </Box>\n              </CSSTransition>\n            )}\n          </Route>\n        ))}\n      </Router>\n\n    </Container>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport '@fontsource/roboto';\nimport \"@fontsource/comfortaa\" \nimport './index.css';\nimport materialTheme from './materialTheme';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={materialTheme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}