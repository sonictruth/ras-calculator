{"version":3,"sources":["serviceWorkerRegistration.ts","reportWebVitals.ts","materialTheme.js","components/Footer.tsx","logo.svg","components/Header.tsx","components/About.tsx","components/Result.tsx","components/Calculator.tsx","App.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","text","primary","secondary","main","red","A400","background","default","Footer","Box","component","m","Typography","variant","color","align","Header","Grid","container","alignItems","justify","spacing","item","xs","alt","src","logo","gutterBottom","About","display","justifyContent","p","Button","Link","to","startIcon","Result","useParams","value","Calculator","IconButton","aria-label","routes","path","name","Component","App","Container","className","maxWidth","exact","map","CSSTransition","in","timeout","classNames","unmountOnExit","my","ReactDOM","render","StrictMode","ThemeProvider","materialTheme","CssBaseline","document","getElementById","process","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.cecf5b4b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    text: {\n      primary: \"#542d4e\",\n      secondary: \"#874a7e\"\n    },\n    primary: {\n      text: '#ff00ff',\n      main: '#ce5eba',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#ffe8fb',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nexport default function Footer() {\n    return (\n        <Box\n            component=\"div\"\n            m={1}>\n            <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                align=\"center\">\n                Copyright &copy;   Kai, Alexandru Constantin 2020\n        </Typography>\n        </Box>\n    );\n}","export default __webpack_public_path__ + \"static/media/logo.4aea2383.svg\";","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport logo from '../logo.svg';\n\nexport default function Header() {\n    return (\n        <Grid container \n            alignItems=\"center\"\n            justify=\"center\" \n            spacing={3}>\n            <Grid item xs={2}>\n                <img alt=\"logo\" src={logo} />\n            </Grid>\n            <Grid item xs={10}>\n                <Typography\n                 align=\"left\"\n                variant=\"h4\"  \n                gutterBottom>\n                    Reproductive Ageing Score\n             </Typography> \n            </Grid>\n        </Grid>\n    );\n}\n","import Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AddToHomeScreenIcon from '@material-ui/icons/AddToHomeScreen';\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom';\n\n\nfunction About() {\n    return (\n        <>\n            <Typography gutterBottom>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                Etiam in luctus diam, eu hendrerit leo. Praesent libero ligula,\n                commodo ut lacinia vitae, venenatis in ipsum. Aenean at nisi ullamcorper,\n                sagittis turpis ut, pulvinar ipsum. Praesent luctus ipsum fermentum, ornare sem in,\n                vestibulum mauris. Etiam congue congue mattis. Praesent id tellus et tortor suscipit\n                porttitor. Etiam massa nunc, bibendum et arcu et, vulputate tempor mi. Fusce\n                in augue sed mauris tempus commodo non pretium mauris. Nunc sagittis, felis id auctor placerat, tortor nisi bibendum mi, eu luctus tortor mauris eget sapien. Cras eu faucibus odio, in semper diam. Etiam non velit iaculis augue feugiat fringilla.\n                Maecenas vel leo eget est tempor rutrum eget nec est. Donec augue sem, tincidunt\n                in feugiat in, aliquam nec ex.\n             </Typography>\n\n            <Box display=\"flex\" justifyContent=\"center\" m={1} p={1} >\n                <Button color=\"primary\"\n                    variant=\"contained\"\n                    component={Link}\n                    to=\"/calculator\">\n                    Let's Begin\n            </Button>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\" m={1} p={1} >\n                <Button\n                    startIcon={<AddToHomeScreenIcon />}\n                    variant=\"contained\"\n                    component={Link}\n                    to=\"/calculator\">\n                    Add to homescreen\n            </Button>\n            </Box>\n\n        </>\n    );\n}\n\nexport default About;\n","import Typography from '@material-ui/core/Typography';\nimport Autorenew from '@material-ui/icons/Autorenew';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom'\n\nimport {\n    useParams,\n} from 'react-router-dom';\n\nfunction Result() {\n    const params: any = useParams();\n    const value = params.value;\n\n    return (\n        <>\n\n            <Box display=\"flex\"\n                justifyContent=\"center\"\n                m={1}\n                p={1} >\n                <Button\n                    startIcon={<Autorenew />}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    component={Link}\n                    to=\"/calculator\">\n                    Try Again\n                </Button>\n            </Box>\n\n        </>\n    );\n\n\n}\n\nexport default Result;\n","import Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForward from '@material-ui/icons/ArrowForward';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom'\n\nfunction Calculator() {\n    return (\n        <>\n            <Box display=\"flex\"\n                justifyContent=\"center\"\n                m={1}\n                p={1} >\n                <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    component={Link}\n                    to=\"/result/1\">\n                    Calculate\n                </Button>\n            </Box>\n\n            <Box display=\"flex\"\n                justifyContent=\"center\"\n                m={1}\n                p={1} >\n                <IconButton\n                    component={Link}\n                    to=\"/about\"\n                    aria-label=\"delete\">\n                    <ArrowBackIcon />\n                </IconButton>\n            </Box>\n\n        </>\n    );\n}\n\nexport default Calculator;\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n} from 'react-router-dom'\nimport { CSSTransition } from 'react-transition-group';\n\nimport Footer from './components/Footer';\nimport Header from './components/Header';\n\nimport About from './components/About';\nimport Result from './components/Result';\nimport Calculator from './components/Calculator';\n\nimport './App.css';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\n\nconst routes = [\n  { path: '/about', name: 'About', Component: About },\n  { path: '/calculator', name: 'Calculator', Component: Calculator },\n  { path: '/result/:value', name: 'Result', Component: Result },\n]\n\nexport default function App() {\n  return (\n    <Container className=\"container\" maxWidth=\"sm\">\n    \n      <Router>\n      \n        <Route exact path=\"/\">\n          <Redirect to=\"/about\" />\n        </Route>\n        {routes.map(({ path, Component }) => (\n          <Route key={path} exact path={path}>\n            {({ match }) => (\n              <CSSTransition\n                in={match != null}\n                timeout={300}\n                classNames=\"page\"\n                unmountOnExit\n              >\n\n                <Box className=\"page\" my={4}>\n                <Header />\n                  <Box m={1}>\n                    <Component />\n                  </Box>\n                  <Footer />\n                </Box>\n              </CSSTransition>\n            )}\n          </Route>\n        ))}\n      </Router>\n    \n    </Container>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'fontsource-roboto';\nimport './index.css';\nimport materialTheme from './materialTheme';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={materialTheme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nconsole.log('URL:' , process.env.PUBLIC_URL)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}